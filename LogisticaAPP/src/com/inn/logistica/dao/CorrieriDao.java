/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.inn.logistica.dao;

import com.inn.logistica.dto.*;
import com.inn.logistica.exceptions.*;

public interface CorrieriDao
{
	/** 
	 * Inserts a new row in the corrieri table.
	 */
	public CorrieriPk insert(Corrieri dto) throws CorrieriDaoException;

	/** 
	 * Updates a single row in the corrieri table.
	 */
	public void update(CorrieriPk pk, Corrieri dto) throws CorrieriDaoException;

	/** 
	 * Deletes a single row in the corrieri table.
	 */
	public void delete(CorrieriPk pk) throws CorrieriDaoException;

	/** 
	 * Returns the rows from the corrieri table that matches the specified primary-key value.
	 */
	public Corrieri findByPrimaryKey(CorrieriPk pk) throws CorrieriDaoException;

	/** 
	 * Returns all rows from the corrieri table that match the criteria 'cor_id = :corId'.
	 */
	public Corrieri findByPrimaryKey(long corId) throws CorrieriDaoException;

	/** 
	 * Returns all rows from the corrieri table that match the criteria ''.
	 */
	public Corrieri[] findAll() throws CorrieriDaoException;

	/** 
	 * Returns all rows from the corrieri table that match the criteria 'cor_id = :corId'.
	 */
	public Corrieri[] findWhereCorIdEquals(long corId) throws CorrieriDaoException;

	/** 
	 * Returns all rows from the corrieri table that match the criteria 'cor_nominativo = :corNominativo'.
	 */
	public Corrieri[] findWhereCorNominativoEquals(String corNominativo) throws CorrieriDaoException;

	/** 
	 * Returns all rows from the corrieri table that match the criteria 'cor_url_tracking = :corUrlTracking'.
	 */
	public Corrieri[] findWhereCorUrlTrackingEquals(String corUrlTracking) throws CorrieriDaoException;

	/** 
	 * Returns all rows from the corrieri table that match the criteria 'cor_abil_tracking = :corAbilTracking'.
	 */
	public Corrieri[] findWhereCorAbilTrackingEquals(int corAbilTracking) throws CorrieriDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the corrieri table that match the specified arbitrary SQL statement
	 */
	public Corrieri[] findByDynamicSelect(String sql, Object[] sqlParams) throws CorrieriDaoException;

	/** 
	 * Returns all rows from the corrieri table that match the specified arbitrary SQL statement
	 */
	public Corrieri[] findByDynamicWhere(String sql, Object[] sqlParams) throws CorrieriDaoException;

}
