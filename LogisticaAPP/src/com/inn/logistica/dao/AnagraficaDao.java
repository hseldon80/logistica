/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.inn.logistica.dao;

import java.util.Date;
import com.inn.logistica.dto.*;
import com.inn.logistica.exceptions.*;

public interface AnagraficaDao
{
	/** 
	 * Inserts a new row in the anagrafica table.
	 */
	public AnagraficaPk insert(Anagrafica dto) throws AnagraficaDaoException;

	/** 
	 * Updates a single row in the anagrafica table.
	 */
	public void update(AnagraficaPk pk, Anagrafica dto) throws AnagraficaDaoException;

	/** 
	 * Deletes a single row in the anagrafica table.
	 */
	public void delete(AnagraficaPk pk) throws AnagraficaDaoException;

	/** 
	 * Returns the rows from the anagrafica table that matches the specified primary-key value.
	 */
	public Anagrafica findByPrimaryKey(AnagraficaPk pk) throws AnagraficaDaoException;

	/** 
	 * Returns all rows from the anagrafica table that match the criteria 'ana_id = :anaId'.
	 */
	public Anagrafica findByPrimaryKey(long anaId) throws AnagraficaDaoException;

	/** 
	 * Returns all rows from the anagrafica table that match the criteria ''.
	 */
	public Anagrafica[] findAll() throws AnagraficaDaoException;

	/** 
	 * Returns all rows from the anagrafica table that match the criteria 'ana_id = :anaId'.
	 */
	public Anagrafica[] findWhereAnaIdEquals(long anaId) throws AnagraficaDaoException;

	/** 
	 * Returns all rows from the anagrafica table that match the criteria 'ana_ragione_sociale = :anaRagioneSociale'.
	 */
	public Anagrafica[] findWhereAnaRagioneSocialeEquals(String anaRagioneSociale) throws AnagraficaDaoException;

	/** 
	 * Returns all rows from the anagrafica table that match the criteria 'ana_tipologia = :anaTipologia'.
	 */
	public Anagrafica[] findWhereAnaTipologiaEquals(String anaTipologia) throws AnagraficaDaoException;

	/** 
	 * Returns all rows from the anagrafica table that match the criteria 'ana_agg_dt = :anaAggDt'.
	 */
	public Anagrafica[] findWhereAnaAggDtEquals(Date anaAggDt) throws AnagraficaDaoException;

	/** 
	 * Returns all rows from the anagrafica table that match the criteria 'ana_cf_piva = :anaCfPiva'.
	 */
	public Anagrafica[] findWhereAnaCfPivaEquals(String anaCfPiva) throws AnagraficaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the anagrafica table that match the specified arbitrary SQL statement
	 */
	public Anagrafica[] findByDynamicSelect(String sql, Object[] sqlParams) throws AnagraficaDaoException;

	/** 
	 * Returns all rows from the anagrafica table that match the specified arbitrary SQL statement
	 */
	public Anagrafica[] findByDynamicWhere(String sql, Object[] sqlParams) throws AnagraficaDaoException;

}
