/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.inn.logistica.dao;

import com.inn.logistica.dto.*;
import com.inn.logistica.exceptions.*;

public interface OrdiniArticoliDao
{
	/** 
	 * Inserts a new row in the ordini_articoli table.
	 */
	public OrdiniArticoliPk insert(OrdiniArticoli dto) throws OrdiniArticoliDaoException;

	/** 
	 * Updates a single row in the ordini_articoli table.
	 */
	public void update(OrdiniArticoliPk pk, OrdiniArticoli dto) throws OrdiniArticoliDaoException;

	/** 
	 * Deletes a single row in the ordini_articoli table.
	 */
	public void delete(OrdiniArticoliPk pk) throws OrdiniArticoliDaoException;

	/** 
	 * Returns the rows from the ordini_articoli table that matches the specified primary-key value.
	 */
	public OrdiniArticoli findByPrimaryKey(OrdiniArticoliPk pk) throws OrdiniArticoliDaoException;

	/** 
	 * Returns all rows from the ordini_articoli table that match the criteria 'ode_id = :odeId'.
	 */
	public OrdiniArticoli findByPrimaryKey(long odeId) throws OrdiniArticoliDaoException;

	/** 
	 * Returns all rows from the ordini_articoli table that match the criteria ''.
	 */
	public OrdiniArticoli[] findAll() throws OrdiniArticoliDaoException;

	/** 
	 * Returns all rows from the ordini_articoli table that match the criteria 'articolo_art_id = :articoloArtId'.
	 */
	public OrdiniArticoli[] findByArticolo(long articoloArtId) throws OrdiniArticoliDaoException;

	/** 
	 * Returns all rows from the ordini_articoli table that match the criteria 'ordini_ord_id = :ordiniOrdId'.
	 */
	public OrdiniArticoli[] findByOrdini(long ordiniOrdId) throws OrdiniArticoliDaoException;

	/** 
	 * Returns all rows from the ordini_articoli table that match the criteria 'ode_id = :odeId'.
	 */
	public OrdiniArticoli[] findWhereOdeIdEquals(long odeId) throws OrdiniArticoliDaoException;

	/** 
	 * Returns all rows from the ordini_articoli table that match the criteria 'ode_qta = :odeQta'.
	 */
	public OrdiniArticoli[] findWhereOdeQtaEquals(int odeQta) throws OrdiniArticoliDaoException;

	/** 
	 * Returns all rows from the ordini_articoli table that match the criteria 'ordini_ord_id = :ordiniOrdId'.
	 */
	public OrdiniArticoli[] findWhereOrdiniOrdIdEquals(long ordiniOrdId) throws OrdiniArticoliDaoException;

	/** 
	 * Returns all rows from the ordini_articoli table that match the criteria 'articolo_art_id = :articoloArtId'.
	 */
	public OrdiniArticoli[] findWhereArticoloArtIdEquals(long articoloArtId) throws OrdiniArticoliDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ordini_articoli table that match the specified arbitrary SQL statement
	 */
	public OrdiniArticoli[] findByDynamicSelect(String sql, Object[] sqlParams) throws OrdiniArticoliDaoException;

	/** 
	 * Returns all rows from the ordini_articoli table that match the specified arbitrary SQL statement
	 */
	public OrdiniArticoli[] findByDynamicWhere(String sql, Object[] sqlParams) throws OrdiniArticoliDaoException;

}
