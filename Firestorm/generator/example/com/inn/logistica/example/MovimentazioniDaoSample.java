/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.inn.logistica.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.inn.logistica.dao.MovimentazioniDao;
import com.inn.logistica.dto.Movimentazioni;
import com.inn.logistica.exceptions.MovimentazioniDaoException;
import com.inn.logistica.factory.MovimentazioniDaoFactory;

public class MovimentazioniDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findByAnagrafica(0);
		// findWhereMovIdEquals(0);
		// findWhereMovDataEquals(null);
		// findWhereMovOraEquals("");
		// findWhereMovTipoEquals("");
		// findWhereAnagraficaAnaIdEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			MovimentazioniDao _dao = getMovimentazioniDao();
			Movimentazioni _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByAnagrafica'
	 * 
	 * @param anagraficaAnaId
	 */
	public static void findByAnagrafica(long anagraficaAnaId)
	{
		try {
			MovimentazioniDao _dao = getMovimentazioniDao();
			Movimentazioni _result[] = _dao.findByAnagrafica(anagraficaAnaId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereMovIdEquals'
	 * 
	 * @param movId
	 */
	public static void findWhereMovIdEquals(long movId)
	{
		try {
			MovimentazioniDao _dao = getMovimentazioniDao();
			Movimentazioni _result[] = _dao.findWhereMovIdEquals(movId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereMovDataEquals'
	 * 
	 * @param movData
	 */
	public static void findWhereMovDataEquals(Date movData)
	{
		try {
			MovimentazioniDao _dao = getMovimentazioniDao();
			Movimentazioni _result[] = _dao.findWhereMovDataEquals(movData);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereMovOraEquals'
	 * 
	 * @param movOra
	 */
	public static void findWhereMovOraEquals(String movOra)
	{
		try {
			MovimentazioniDao _dao = getMovimentazioniDao();
			Movimentazioni _result[] = _dao.findWhereMovOraEquals(movOra);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereMovTipoEquals'
	 * 
	 * @param movTipo
	 */
	public static void findWhereMovTipoEquals(String movTipo)
	{
		try {
			MovimentazioniDao _dao = getMovimentazioniDao();
			Movimentazioni _result[] = _dao.findWhereMovTipoEquals(movTipo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereAnagraficaAnaIdEquals'
	 * 
	 * @param anagraficaAnaId
	 */
	public static void findWhereAnagraficaAnaIdEquals(long anagraficaAnaId)
	{
		try {
			MovimentazioniDao _dao = getMovimentazioniDao();
			Movimentazioni _result[] = _dao.findWhereAnagraficaAnaIdEquals(anagraficaAnaId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getMovimentazioniDao'
	 * 
	 * @return MovimentazioniDao
	 */
	public static MovimentazioniDao getMovimentazioniDao()
	{
		return MovimentazioniDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Movimentazioni dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getMovId() );
		buf.append( ", " );
		buf.append( dto.getMovData() );
		buf.append( ", " );
		buf.append( dto.getMovOra() );
		buf.append( ", " );
		buf.append( dto.getMovTipo() );
		buf.append( ", " );
		buf.append( dto.getAnagraficaAnaId() );
		System.out.println( buf.toString() );
	}

}
