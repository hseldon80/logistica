/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.inn.logistica.dao;

import java.util.Date;
import com.inn.logistica.dto.*;
import com.inn.logistica.exceptions.*;

public interface ArticoloDao
{
	/** 
	 * Inserts a new row in the articolo table.
	 */
	public ArticoloPk insert(Articolo dto) throws ArticoloDaoException;

	/** 
	 * Updates a single row in the articolo table.
	 */
	public void update(ArticoloPk pk, Articolo dto) throws ArticoloDaoException;

	/** 
	 * Deletes a single row in the articolo table.
	 */
	public void delete(ArticoloPk pk) throws ArticoloDaoException;

	/** 
	 * Returns the rows from the articolo table that matches the specified primary-key value.
	 */
	public Articolo findByPrimaryKey(ArticoloPk pk) throws ArticoloDaoException;

	/** 
	 * Returns all rows from the articolo table that match the criteria 'art_id = :artId'.
	 */
	public Articolo findByPrimaryKey(long artId) throws ArticoloDaoException;

	/** 
	 * Returns all rows from the articolo table that match the criteria ''.
	 */
	public Articolo[] findAll() throws ArticoloDaoException;

	/** 
	 * Returns all rows from the articolo table that match the criteria 'art_id = :artId'.
	 */
	public Articolo[] findWhereArtIdEquals(long artId) throws ArticoloDaoException;

	/** 
	 * Returns all rows from the articolo table that match the criteria 'art_codice = :artCodice'.
	 */
	public Articolo[] findWhereArtCodiceEquals(String artCodice) throws ArticoloDaoException;

	/** 
	 * Returns all rows from the articolo table that match the criteria 'art_descrizione = :artDescrizione'.
	 */
	public Articolo[] findWhereArtDescrizioneEquals(String artDescrizione) throws ArticoloDaoException;

	/** 
	 * Returns all rows from the articolo table that match the criteria 'art_barcode = :artBarcode'.
	 */
	public Articolo[] findWhereArtBarcodeEquals(String artBarcode) throws ArticoloDaoException;

	/** 
	 * Returns all rows from the articolo table that match the criteria 'art_giacenza = :artGiacenza'.
	 */
	public Articolo[] findWhereArtGiacenzaEquals(int artGiacenza) throws ArticoloDaoException;

	/** 
	 * Returns all rows from the articolo table that match the criteria 'art_agg_dt = :artAggDt'.
	 */
	public Articolo[] findWhereArtAggDtEquals(Date artAggDt) throws ArticoloDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the articolo table that match the specified arbitrary SQL statement
	 */
	public Articolo[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArticoloDaoException;

	/** 
	 * Returns all rows from the articolo table that match the specified arbitrary SQL statement
	 */
	public Articolo[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArticoloDaoException;

}
